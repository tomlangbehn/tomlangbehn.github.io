str_remove(., "[,]") %>%
str_remove(., "[.]") %>%
word(1)
initital <- bib$AUTHOR[[i]][j] %>%
str_remove(., "[,]") %>%
str_remove(., "[.]") %>%
str_split(" ") %>%
unlist() %>%
.[-1] %>%
str_sub(., 1, 1) %>%
paste(., sep = "", collapse = "")
authorlist[j] <- paste(lastname, initital)
}
typ <- paste0("type: ",paste(bib$CATEGORY[[i]]))
col <- paste0("collection: ", "publications")
au <- paste0("author: ", paste0(paste(authorlist[-no_au], collapse = ", ")), " & ", last(authorlist))
yr <- paste0("year: ", paste(bib$YEAR[[i]]))
tit <- paste0("title: ", paste(bib$TITLE[[i]]))
jou <- paste0("journal: ", paste(bib$JOURNAL[[i]]))
vol <- paste0("volume: ", paste(bib$VOLUME[[i]]))
pge <- paste0("pages: ", paste(bib$PAGES[[i]]))
doi <- paste0("doi: ", paste(bib$DOI[[i]]))
url <- paste0("url: ", paste(bib$URL[[i]]))
name <- paste0("article", i, sep = "")
tmp <- list(typ = typ, col=col, au = au, yr = yr, tit = tit, jou = jou, vol = vol, pge = pge, doi = doi, url = url)
yamllist[[name]] <- tmp
filename <- paste0(word(authorlist[1]), "_", bib$YEAR[[i]], "_", name, ".md")
abst <- paste0(bib$ABSTRACT[[i]])
tmp2 <- list(abst = abst, filename=filename)
yamllist2[[name]] <- tmp2
}
for (i in 1:length(yamllist)) {
fileConn<-file(yamllist2[[i]]$filename)
writeLines(c("---",
paste0(unlist(yamllist[i])),
"---",
paste0(yamllist2[[i]]$abst)),
fileConn)
close(fileConn)
}
# for (i in 1:length(yamllist)) {
#   cat(paste0("---", sep = "\n"),
#       paste0(unlist(yamllist[i]), sep = "\n"),
#       paste0("---", sep = "\n"),
#       paste0("\n", yamllist2[[i]]$abst, sep = "\n"), file = yamllist2[[i]]$filename)
# }
library(tidyverse)
library(bib2df)
#!> read bib text files
bib <- bib2df::bib2df("my_pubs.bib") %>% arrange(YEAR,AUTHOR)
yamllist <- list()
for (i in 1:nrow(bib)) {
no_au <- length(bib$AUTHOR[[i]])
authorlist <- bib$AUTHOR[[i]]
for (j in 1:no_au) {
lastname <- bib$AUTHOR[[i]][j] %>%
str_remove(., "[,]") %>%
str_remove(., "[.]") %>%
word(1)
initital <- bib$AUTHOR[[i]][j] %>%
str_remove(., "[,]") %>%
str_remove(., "[.]") %>%
str_split(" ") %>%
unlist() %>%
.[-1] %>%
str_sub(., 1, 1) %>%
paste(., sep = "", collapse = "")
authorlist[j] <- paste(lastname, initital)
filename <- paste0(word(authorlist[1]), "_", bib$YEAR[[i]], "_", name, ".md")
}
}
styler:::style_selection()
fileConn <- file("test.html")
writeLines(
c(
"<table style='width:100%'>"
),
fileConn
)
close(fileConn)
writeLines(
c(
"<table style='width:100%'>",
"<tr>",
"<td width =80%>January</td>"
"<td width =20%>$100</td>"
"</tr>"
"</table>"
),
fileConn
)
writeLines(
c(
"<table style='width:100%'>",
"<tr>",
"<td width =80%>January</td>",
"<td width =20%>$100</td>",
"</tr>",
"</table>"
),
fileConn
)
writeLines(
c(
"<table style='width:100%'>",
"<tr>",
"<td width =80%>January</td>",
"<td width =20%>$100</td>",
"</tr>",
"</table>"
),
fileConn
)
fileConn <- file("test.html")
writeLines(
c(
"<table style='width:100%'>",
"<tr>",
"<td width =80%>January</td>",
"<td width =20%>$100</td>",
"</tr>",
"</table>"
),
fileConn
)
close(fileConn)
library(tidyverse)
library(bib2df)
#!> read bib text files
bib <- bib2df::bib2df("my_pubs.bib") %>% arrange(YEAR,AUTHOR)
yamllist <- list()
for (i in 1:nrow(bib)) {
no_au <- length(bib$AUTHOR[[i]])
authorlist <- bib$AUTHOR[[i]]
for (j in 1:no_au) {
lastname <- bib$AUTHOR[[i]][j] %>%
str_remove(., "[,]") %>%
str_remove(., "[.]") %>%
word(1)
initital <- bib$AUTHOR[[i]][j] %>%
str_remove(., "[,]") %>%
str_remove(., "[.]") %>%
str_split(" ") %>%
unlist() %>%
.[-1] %>%
str_sub(., 1, 1) %>%
paste(., sep = "", collapse = "")
authorlist[j] <- paste(lastname, initital)
filename <- paste0(word(authorlist[1]), "_", bib$YEAR[[i]], "_", name, ".md")
filename
library(tidyverse)
library(bib2df)
#!> read bib text files
bib <- bib2df::bib2df("my_pubs.bib") %>% arrange(YEAR,AUTHOR)
yamllist <- list()
for (i in 1:nrow(bib)) {
no_au <- length(bib$AUTHOR[[i]])
authorlist <- bib$AUTHOR[[i]]
for (j in 1:no_au) {
lastname <- bib$AUTHOR[[i]][j] %>%
str_remove(., "[,]") %>%
str_remove(., "[.]") %>%
word(1)
initital <- bib$AUTHOR[[i]][j] %>%
str_remove(., "[,]") %>%
str_remove(., "[.]") %>%
str_split(" ") %>%
unlist() %>%
.[-1] %>%
str_sub(., 1, 1) %>%
paste(., sep = "", collapse = "")
authorlist[j] <- paste(lastname, initital)
filename <- paste0(word(authorlist[1]), "_", bib$YEAR[[i]], "_", name, ".md")
}}
library(tidyverse)
library(bib2df)
#!> read bib text files
bib <- bib2df::bib2df("my_pubs.bib") %>% arrange(YEAR,AUTHOR)
yamllist <- list()
library(tidyverse)
library(bib2df)
#!> read bib text files
bib <- bib2df::bib2df("my_pubs.bib") %>% arrange(YEAR,AUTHOR)
yamllist <- list()
yamllist2 <- list()
for (i in 1:nrow(bib)) {
no_au <- length(bib$AUTHOR[[i]])
authorlist <- bib$AUTHOR[[i]]
for (j in 1:no_au) {
lastname <- bib$AUTHOR[[i]][j] %>%
str_remove(., "[,]") %>%
str_remove(., "[.]") %>%
word(1)
initital <- bib$AUTHOR[[i]][j] %>%
str_remove(., "[,]") %>%
str_remove(., "[.]") %>%
str_split(" ") %>%
unlist() %>%
.[-1] %>%
str_sub(., 1, 1) %>%
paste(., sep = "", collapse = "")
authorlist[j] <- paste(lastname, initital)
}
typ <- paste0("type: ",paste(bib$CATEGORY[[i]]))
col <- paste0("collection: ", "publications")
au <- paste0("author: ", paste0(paste(authorlist[-no_au], collapse = ", ")), " & ", last(authorlist))
yr <- paste0("year: ", paste(bib$YEAR[[i]]))
tit <- paste0("title: ", paste(bib$TITLE[[i]]))
jou <- paste0("journal: ", paste(bib$JOURNAL[[i]]))
vol <- paste0("volume: ", paste(bib$VOLUME[[i]]))
pge <- paste0("pages: ", paste(bib$PAGES[[i]]))
doi <- paste0("doi: ", paste(bib$DOI[[i]]))
url <- paste0("url: ", paste(bib$URL[[i]]))
name <- paste0("article", i, sep = "")
tmp <- list(typ = typ, col=col, au = au, yr = yr, tit = tit, jou = jou, vol = vol, pge = pge, doi = doi, url = url)
yamllist[[name]] <- tmp
filename <- paste0(word(authorlist[1]), "_", bib$YEAR[[i]], "_", name, ".md")
abst <- paste0(bib$ABSTRACT[[i]])
tmp2 <- list(abst = abst, filename=filename)
yamllist2[[name]] <- tmp2
}
# for (i in 1:length(yamllist)) {
#   fileConn<-file(yamllist2[[i]]$filename)
#   writeLines(c("---",
#                paste0(unlist(yamllist[i])),
#                "---",
#                paste0(yamllist2[[i]]$abst)),
#              fileConn)
#   close(fileConn)
# }
yamllist2
library(tidyverse)
library(bib2df)
#!> read bib text files
bib <- bib2df::bib2df("my_pubs.bib") %>% arrange(YEAR,AUTHOR)
yamllist <- list()
yamllist2 <- list()
for (i in 1:nrow(bib)) {
no_au <- length(bib$AUTHOR[[i]])
authorlist <- bib$AUTHOR[[i]]
for (j in 1:no_au) {
lastname <- bib$AUTHOR[[i]][j] %>%
str_remove(., "[,]") %>%
str_remove(., "[.]") %>%
word(1)
initital <- bib$AUTHOR[[i]][j] %>%
str_remove(., "[,]") %>%
str_remove(., "[.]") %>%
str_split(" ") %>%
unlist() %>%
.[-1] %>%
str_sub(., 1, 1) %>%
paste(., sep = "", collapse = "")
authorlist[j] <- paste(lastname, initital)
}
typ <- paste0("type: ",paste(bib$CATEGORY[[i]]))
col <- paste0("collection: ", "publications")
au <- paste0("author: ", paste0(paste(authorlist[-no_au], collapse = ", ")), " & ", last(authorlist))
yr <- paste0("year: ", paste(bib$YEAR[[i]]))
tit <- paste0("title: ", paste(bib$TITLE[[i]]))
jou <- paste0("journal: ", paste(bib$JOURNAL[[i]]))
vol <- paste0("volume: ", paste(bib$VOLUME[[i]]))
pge <- paste0("pages: ", paste(bib$PAGES[[i]]))
doi <- paste0("doi: ", paste(bib$DOI[[i]]))
url <- paste0("url: ", paste(bib$URL[[i]]))
name <- paste0("article", i, sep = "")
tmp <- list(typ = typ, col=col, au = au, yr = yr, tit = tit, jou = jou, vol = vol, pge = pge, doi = doi, url = url)
yamllist[[name]] <- tmp
filename <- paste0(word(authorlist[1]), "_", bib$YEAR[[i]], "_", name, ".md")
abst <- paste0(bib$ABSTRACT[[i]])
tmp2 <- list(abst = abst, filename=filename)
yamllist2[[name]] <- tmp2
}
for (i in 1:length(yamllist)) {
fileConn<-file(yamllist2[[i]]$filename)
writeLines(c("---",
paste0(unlist(yamllist[i])),
"---",
paste0(yamllist2[[i]]$abst)),
fileConn)
close(fileConn)
}
# for (i in 1:length(yamllist)) {
#   cat(paste0("---", sep = "\n"),
#       paste0(unlist(yamllist[i]), sep = "\n"),
#       paste0("---", sep = "\n"),
#       paste0("\n", yamllist2[[i]]$abst, sep = "\n"), file = yamllist2[[i]]$filename)
# }
library(tidyverse)
library(bib2df)
#!> read bib text files
bib <- bib2df::bib2df("my_pubs.bib") %>% arrange(YEAR,AUTHOR)
pdf_filenames <- here::here("files","papers") %>% list.files(".pdf")
yamllist <- list()
yamllist2 <- list()
for (i in 1:nrow(bib)) {
no_au <- length(bib$AUTHOR[[i]])
#!> reformat author names to just include lastname followed by initials
authorlist <- bib$AUTHOR[[i]]
for (j in 1:no_au) {
lastname <- bib$AUTHOR[[i]][j] %>%
str_remove(., "[,]") %>%
str_remove(., "[.]") %>%
word(1)
initital <- bib$AUTHOR[[i]][j] %>%
str_remove(., "[,]") %>%
str_remove(., "[.]") %>%
str_split(" ") %>%
unlist() %>%
.[-1] %>%
str_sub(., 1, 1) %>%
paste(., sep = "", collapse = "")
authorlist[j] <- paste(lastname, initital)
}
typ <- paste0("type: ",paste(bib$CATEGORY[[i]]))
col <- paste0("collection: ", "publications")
au <- paste0("author: ", paste0(paste(authorlist[-no_au], collapse = ", ")), " & ", last(authorlist))
yr <- paste0("year: ", paste(bib$YEAR[[i]]))
tit <- paste0("title: ", paste(bib$TITLE[[i]])) %>% str_trim()
jou <- paste0("journal: ", paste(bib$JOURNAL[[i]]))
vol <- paste0("volume: ", paste(bib$VOLUME[[i]]))
pge <- paste0("pages: ", bib$PAGES[[i]] %>% str_replace(., "--", "-"))
doi <- paste0("doi: ", paste(bib$DOI[[i]]))
url <- paste0("url: ", bib$URL[[i]] %>% str_split(" ") %>% unlist %>% last())
name <- paste0("article", i, sep = "")
head_title <- paste(bib$TITLE[[i]]) %>% str_trim() %>% word(., 1,6)
if(pdf_filenames %>% str_detect(., head_title, negate = FALSE) %>% any %>% isTRUE){
pdf_file <- paste0("filename: ", pdf_filenames[pdf_filenames %>%  str_detect(., head_title, negate = FALSE)])
} else {
pdf_file <- paste0("filename:")
}
tmp <- list(typ = typ, col=col, au = au, yr = yr, tit = tit, jou = jou, vol = vol, pge = pge, doi = doi, url = url, pdf_file=pdf_file)
yamllist[[name]] <- tmp
filename <- paste0(word(authorlist[1]), "_", bib$YEAR[[i]], "_", name, ".md")
abst <- paste0(bib$ABSTRACT[[i]])
tmp2 <- list(abst = abst, filename=filename)
yamllist2[[name]] <- tmp2
}
for (i in 1:length(yamllist)) {
fileConn<-file(yamllist2[[i]]$filename)
writeLines(c("---",
paste0(unlist(yamllist[i])),
"---",
paste0(yamllist2[[i]]$abst)),
fileConn)
close(fileConn)
}
# for (i in 1:length(yamllist)) {
#   cat(paste0("---", sep = "\n"),
#       paste0(unlist(yamllist[i]), sep = "\n"),
#       paste0("---", sep = "\n"),
#       paste0("\n", yamllist2[[i]]$abst, sep = "\n"), file = yamllist2[[i]]$filename)
# }
library(tidyverse)
library(bib2df)
#!> read bib text files
bib <- bib2df::bib2df("my_pubs.bib") %>% arrange(YEAR,AUTHOR)
pdf_filenames <- here::here("files","papers") %>% list.files(".pdf")
yamllist <- list()
yamllist2 <- list()
for (i in 1:nrow(bib)) {
no_au <- length(bib$AUTHOR[[i]])
#!> reformat author names to just include lastname followed by initials
authorlist <- bib$AUTHOR[[i]]
for (j in 1:no_au) {
lastname <- bib$AUTHOR[[i]][j] %>%
str_remove(., "[,]") %>%
str_remove(., "[.]") %>%
word(1)
initital <- bib$AUTHOR[[i]][j] %>%
str_remove(., "[,]") %>%
str_remove(., "[.]") %>%
str_split(" ") %>%
unlist() %>%
.[-1] %>%
str_sub(., 1, 1) %>%
paste(., sep = "", collapse = "")
authorlist[j] <- paste(lastname, initital)
}
typ <- paste0("type: ",paste(bib$CATEGORY[[i]]))
col <- paste0("collection: ", "publications")
au <- paste0("author: ", paste0(paste(authorlist[-no_au], collapse = ", ")), " & ", last(authorlist))
yr <- paste0("year: ", paste(bib$YEAR[[i]]))
tit <- paste0("title: ", paste0("'", bib$TITLE[[i]], "'"))
jou <- paste0("journal: ", paste0("'", bib$JOURNAL[[i]], "'"))
vol <- paste0("volume: ", paste(bib$VOLUME[[i]]))
pge <- paste0("pages: ", bib$PAGES[[i]] %>% str_replace(., "--", "-"))
doi <- paste0("doi: ", paste(bib$DOI[[i]]))
url <- paste0("url: ", bib$URL[[i]] %>% str_split(" ") %>% unlist %>% last())
name <- paste0("article", i, sep = "")
head_title <- paste(bib$TITLE[[i]]) %>% str_trim() %>% word(., 1,6)
if(pdf_filenames %>% str_detect(., head_title, negate = FALSE) %>% any %>% isTRUE){
pdf_file <- paste0("filename: ", pdf_filenames[pdf_filenames %>%  str_detect(., head_title, negate = FALSE)])
} else {
pdf_file <- paste0("filename:")
}
tmp <- list(typ = typ, col=col, au = au, yr = yr, tit = tit, jou = jou, vol = vol, pge = pge, doi = doi, url = url, pdf_file=pdf_file)
yamllist[[name]] <- tmp
filename <- paste0(word(authorlist[1]), "_", bib$YEAR[[i]], "_", name, ".md")
abst <- paste0(bib$ABSTRACT[[i]])
tmp2 <- list(abst = abst, filename=filename)
yamllist2[[name]] <- tmp2
}
yamllist2
paste0(unlist(yamllist[i]))
paste0("author: ", paste0(paste(authorlist[-no_au], collapse = ", ")), " & ", last(authorlist))
a <- paste0("author: ", paste0(paste(authorlist[-no_au], collapse = ", ")), " & ", last(authorlist))
a <- paste0("author: ", paste0(paste(authorlist[-no_au], collapse = ", ")), " & ", last(authorlist))
a
str_replace(a, ":", "-")
str_replace(a, "{", "-")
str_replace(a, "'{'", "-")
a
?str_replace
str_replace_all(a, "'{'", "-")
str_replace_all(a, "an", "-")
str_replace_all(a, "'\'", "-")
str_replace_all(a, "\", "-")
str_replace_all(a, "'\'", "-")
str_replace_all(a, "'\'", "-")
str_replace_all(a, "'\\'", "-")
a
str_replace_all(a, "{\'{o}}", "-")
str_replace_all(a, "''{\'{o}}''", "-")
str_replace_all(a, fixed("{\'{o}}"), "-")
i <- c("I", "\u0130", "i")
str_detect(i, fixed("i", TRUE))
str_detect(i, coll("i", TRUE))
str_detect(i, coll("i", TRUE, locale = "tr")
str_detect(i, coll("i", TRUE, locale = "tr"))
str_detect(i, coll("i", TRUE, locale = "tr"))
i <- c("I", "\u0130", "i")
str_replace_all(i, fixed("i", TRUE))
str_replace_all(i, fixed("i", TRUE),"Ø")
str_replace_all(i, coll("i", TRUE), "Ø")
str_replace_all(i, coll("i", TRUE, locale = "tr"), "Ø")
str_replace_all(a, fixed("\{\'{o}}"), "-")
str_replace_all(a, "\\{, "-")
i <- c("I", "\u0130", "i")
str_replace_all(i, fixed("i", TRUE),"Ø")
str_replace_all(i, coll("i", TRUE), "Ø")
str_replace_all(i, coll("i", TRUE, locale = "tr"), "Ø")
a <- paste0("author: ", paste0(paste(authorlist[-no_au], collapse = ", ")), " & ", last(authorlist))
a
str_replace_all(a, "\\{, "-")
str_replace_all(a, "\\{", "-")
a
str_replace_all(a, "\\{", "-")
str_replace_all(a, "\\'{\\'{o}}'", "-")
str_replace_all(a, "\\'{\\'", "-")
str_replace_all(a, "\\{\\'", "-")
str_replace_all(a, "\\{\\", "-")
str_replace_all(a, "\\{", "-")
str_replace_all(a, "\\{\\\\", "-")
str_replace_all(a, "\\{\\\\'{o}}", "-")
str_replace_all(a, "\\{\\\\\\'{o}}", "-")
str_replace_all(a, "\\{\\\\'", "-")
str_replace_all(a, "\\{\\\\'\\{", "-")
str_replace_all(a, "\\{\\\\'\\{o", "-")
str_replace_all(a, "\\{\\\\'\\{o}}", "-")
str_replace_all(a, "\\{\\\\'\\{o\\}}", "-")
str_replace_all(a, "\\{\\\\'\\{o\\}", "-")
str_replace_all(a, "\\{\\\\'\\{o\\}``}", "-")
str_replace_all(a, "\\{\\\\'\\{o\\}\\}", "-")
str_replace_all(a, "\\{\\\\'\\{o\\}\\}", "ó")
no_au
bib
str_replace_all(bib, "\\{\\\\'\\{o\\}\\}", "ó")
bib$AUTHOR[[i]]
bib$AUTHOR[[2]]
str_replace_all(bib$AUTHOR[[2]], "\\{\\\\'\\{o\\}\\}", "ó")
a <- paste0("author: ", paste0(paste(authorlist[-no_au], collapse = ", ")), " & ", last(authorlist))
a
a -> tibble(x = c("Tom","Lasse", ""), y = ("Marteinsd{\\'{o}}ttir", "Will", "Hlynur"))
a -> tibble(x = c("Tom","Lasse", ""), y = c("Marteinsd{\\'{o}}ttir", "Will", "Hlynur"))
a
a <- paste0("author: ", paste0(paste(authorlist[-no_au], collapse = ", ")), " & ", last(authorlist))
aa -> tibble(x = c("Tom","Lasse", ""), y = c(a, "Will", "Hlynur"))
aa <- tibble(x = c("Tom","Lasse", ""), y = c("Marteinsd{\\'{o}}ttir", "Will", "Hlynur"))
a
aa
aa <- tibble(x = c("Tom","Lasse", "Jakob"), y = c("Marteinsd{\\'{o}}ttir", "Will", "Hlynur"))
str_replace_all(aa, "\\{\\\\'\\{o\\}\\}", "ó")
str_replace_all(aa$x, "\\{\\\\'\\{o\\}\\}", "ó")
str_replace_all(aa$y, "\\{\\\\'\\{o\\}\\}", "ó")
a <- bib$AUTHOR[[1]]
a
a <- bib$AUTHOR[[2]]
a
x <- bib$AUTHOR[[2]]
x
str_replace_all(x, "\\{\\\\O\\}", "Ø")
x <- bib$AUTHOR[[3]]
x
str_replace_all(x, "\\{\\\\o\\}", "ø")
x <- bib$AUTHOR[[4]]
x
x <- bib$AUTHOR[[5]]
x
str_replace_all(x, "\\{\\\\o\\}", "ø")
str_replace_all(x, "\\{\\\\O\\}", "Ø")
?latex2exp
latex2exp(x, output = c("text"))
latex2exp ::latex2exp(x, output = c("text"))
latex2exp ::Tex(x, output = c("text"))
??TeX
tidytext::tidytext(x, output = c("text"))
??tidytext
TeX(x, output = c("text"))
?TeX
latex2exp::TeX(x, output = c("text"))
latex2exp::TeX(x, output = c("expression"))
